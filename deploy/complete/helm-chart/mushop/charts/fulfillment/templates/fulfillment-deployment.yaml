apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fulfillment.fullname" . }}
  labels:
{{ include "fulfillment.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/name: {{ include "fulfillment.name" . }}
      run: {{ include "fulfillment.name" . }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        version: {{ .Values.image.tag | quote }}
        app.kubernetes.io/name: {{ include "fulfillment.name" . }}
        run: {{ include "fulfillment.name" . }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "80"
        {{ if eq .Values.opentelemetry.provider "oci" }}
          instrumentation.opentelemetry.io/inject-java: "mushop/inst-apm-java"
        {{ else }}
          instrumentation.opentelemetry.io/inject-java: "true"
        {{ end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
          env:
            - name: ORDERS_NEW
              value: "{{ .Values.env.newOrdersSubject }}"
            - name: ORDERS_SHIPPED
              value: "{{ .Values.env.shippedOrdersSubject }}"
            - name: SIMULATION_DELAY
              value: "{{ .Values.env.simulationDelay }}"
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: kafka-compati-secret
                  key: server
            - name: KAFKA_CONFIG
              valueFrom:
                secretKeyRef:
                  name: kafka-compati-secret
                  key: sasl-jaas-config
            {{ if eq .Values.opentelemetry.provider "oci" }}
              - name: OTEL_com_oracle_apm_agent_private_data_key
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.opentelemetry.secret }}"
                    key: "{{ .Values.opentelemetry.endpoint }}"
              - name: OTEL_com_oracle_apm_agent_data_upload_endpoint
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.opentelemetry.secret }}"
                    key: "{{ .Values.opentelemetry.key }}"
            {{ else }}
              - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.opentelemetry.otel.secret }}"
                    key: "{{ .Values.opentelemetry.otel.endpoint }}"
              - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
                value: http/protobuf
              - name: OTEL_EXPORTER_OTLP_HEADERS
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.opentelemetry.otel.secret }}"
                    key: "{{ .Values.opentelemetry.otel.oltp.headers }}"
              - name: OTEL_EXPORTER_OTLP_TRACES_HEADERS
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.opentelemetry.otel.secret }}"
                    key: "{{ .Values.opentelemetry.otel.oltp.traceHeaders }}"

