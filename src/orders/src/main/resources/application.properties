spring.application.name=orders
server.port=80
server.tomcat.max-threads=2

spring.main.lazy-initialization=true

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.probes.enabled=true

spring.zipkin.baseUrl=http://${zipkin_host:zipkin}:9411/
spring.zipkin.enabled=${zipkin_enabled:false}
spring.sleuth.sampler.percentage=1.0
spring.jmx.enabled=false

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.generate_statistics=true

spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

logging.level.mushop.*=INFO
logging.level.org.hibernate=WARN

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.jaas.enabled=true

spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=${KAFKA_CONFIG}

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.enable.idempotence=false
spring.kafka.producer.properties.interceptor.classes=io.opentelemetry.instrumentation.kafkaclients.v2_6.TracingProducerInterceptor


spring.kafka.consumer.group-id=orders-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.allow.auto.create.topics=true
spring.kafka.consumer.properties.interceptor.classes=io.opentelemetry.instrumentation.kafkaclients.v2_6.TracingConsumerInterceptor

spring.kafka.listener.missing-topics-fatal=false

# OpenTelemetryのサンプリング設定
otel.trace.sampler=always_on

mushop.messaging.topics.orders=mushop-orders
mushop.messaging.topics.shipments=mushop-shipments

mushop.orders.oadbservice=${OADB_SERVICE:mock}
mushop.orders.oadbuser=${OADB_USER:}
mushop.orders.oadbpw=${OADB_PW:}

spring.jmx.enabled=true
server.tomcat.mbeanregistry.enabled=true