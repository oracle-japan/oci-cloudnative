version: 0.1
component: build
timeoutInSeconds: 10000
runAs: root
shell: bash
env:
  vaultVariables:
     OCI_REGISTRY_USERNAME: "ocid1.vaultsecret.oc1.us-sanjose-1.amaaaaaassl65iqaxjzdtrtdk2s6dkq43p3iihiukmv6hchmf5vmy357cnjq"
     OCI_REGISTRY_PASSWORD: "ocid1.vaultsecret.oc1.us-sanjose-1.amaaaaaassl65iqaq5imtkgwgvtnl37enofiqfp7vlcmzxmzqylj65rjidsa"
  exportedVariables:
    - NEW_VERSION

steps:
  - type: Command
    name: "Install yq"
    command: |
      sudo curl -OL https://github.com/mikefarah/yq/releases/download/v4.45.1/yq_linux_amd64 -O /usr/local/bin/yq && sudo chmod +x /usr/local/bin/yq
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        runAs: root
  - type: Command
    name: "Export variables and replace helm Chart versions"
    command: |
      BUILDRUN_HASH=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 7 | head -n 1`
      echo "BUILDRUN_HASH: " ${BUILDRUN_HASH}
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        runAs: root
  - type: Command
    name: "Container Image Build api"
    shell: /bin/sh
    command: |
      docker image build -t image_api ./src/api/
    onFailure:
      - type: Command
        command: |
          echo "Failured build"
        runAs: root
  - type: Command
    name: "Container Image Build orders"
    shell: /bin/sh
    command: |
      docker image build -t image_orders ./src/orders/
    onFailure:
      - type: Command
        command: |
          echo "Failured build"
        runAs: root
  - type: Command
    name: "Container Image Build fulfillment"
    shell: /bin/sh
    command: |
      docker image build -t image_fulfillment ./src/fulfillment/ -f ./src/fulfillment/Dockerfile.jvm
    onFailure:
      - type: Command
        command: |
          echo "Failured build"
        runAs: root
  - type: Command
    name: "Container Image Build storefront"
    shell: /bin/sh
    command: |
      docker image build -t image_storefront ./src/storefront/ 
    onFailure:
      - type: Command
        command: |
          echo "Failured build"
        runAs: root
  - type: Command
    name: "update the version"
    shell: /bin/sh
    command: |
      CURRENT_VERSION=`yq ".version" deploy/complete/helm-chart/setup/Chart.yaml`
      NEW_VERSION=`echo "${CURRENT_CHART_VERSION}" | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g'`
    onFailure:
      - type: Command
        command: |
          echo "Failured build"
        runAs: root
  - type: Command
    name: "update the Mushop-Setup Helm Chart Version"
    shell: /bin/sh
    command: |
      yq -i ".version = \"${NEW_VERSION}\"" deploy/complete/helm-chart/setup/Chart.yaml
    onFailure:
      - type: Command
        command: |
          echo "Failured build"
        runAs: root
  - type: Command
    name: "update the Mushop Helm Chart Version"
    shell: /bin/sh
    command: |
      yq -i ".version = \"${NEW_VERSION}\"" deploy/complete/helm-chart/mushop/Chart.yaml
    onFailure:
      - type: Command
        command: |
          echo "Failured build"
        runAs: root
  - type: Command
    name: "Helm Package mushop setup"
    command: |
      helm dependency update deploy/complete/helm-chart/setup/ && helm package deploy/complete/helm-chart/setup/
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        runAs: root
  - type: Command
    name: "Helm Package mushop"
    command: |
      helm package deploy/complete/helm-chart/mushop/
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        runAs: root
  - type: Command
    name: "Helm Registry Login"
    command: |
      helm registry login sjc.ocir.io -u $OCI_REGISTRY_USERNAME -p $OCI_REGISTRY_PASSWORD
    onFailure:
      - type: Command
        command: |
          echo "Failured helm registry login"
        runAs: root
  - type: Command
    name: "Helm Push mushop setup"
    command: |
      helm push mushop-setup-${NEW_VERSION}.tgz oci://sjc.ocir.io/orasejapan/mushop/
    onFailure:
      - type: Command
        command: |
          echo "Failured helm push"
        runAs: root
  - type: Command
    name: "Helm Push setup"
    command: |
      helm push mushop-${NEW_VERSION}.tgz oci://sjc.ocir.io/orasejapan/mushop/
    onFailure:
      - type: Command
        command: |
          echo "Failured helm push"
        runAs: root

outputArtifacts:
  - name: image_api
    type: DOCKER_IMAGE
    location: image_api
  - name: image_orders
    type: DOCKER_IMAGE
    location: image_orders
  - name: image_fulfillment
    type: DOCKER_IMAGE
    location: image_fulfillment
  - name: image_storefront
    type: DOCKER_IMAGE
    location: image_storefront
  - name: api-values
    type: BINARY
    location: deploy/complete/helm-chart/mushop/charts/api/values.yaml
  - name: orders-values
    type: BINARY
    location: deploy/complete/helm-chart/mushop/charts/orders/values.yaml
  - name: fulfillment-values
    type: BINARY
    location: deploy/complete/helm-chart/mushop/charts/fulfillment/values.yaml
  - name: storefront-values
    type: BINARY
    location: deploy/complete/helm-chart/mushop/charts/storefront/values.yaml